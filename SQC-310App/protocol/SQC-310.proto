#terminator = CR LF;
Terminator = ;
#OutTerminator = CR LF;
#InTerminator = CR LF;

# Length: Command length + 34 | Command length + 0x22 | 1:#, 2:$, 3:%, 4:&, 5:', 6:(, etc

SYNC = "!";

get_device_name {
    # Example: !#@O7 -> !8ASQC310C 2MB Ver 6.65Zï¿½ (Response CRC2 is non-printable)
    LEN = 0x23; CMD = "@"; CRC1 = 0x4F; CRC2 = 0x37;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A", "%s", "\?\?";
    ExtraInput = Ignore;  # Just read the first section and ignore the rest
}

# Material Commands

get_material_name {
    LEN = 0x27; CMD = "F\$1? 1"; CRC1 = 0x0; CRC2 = 0x0;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in "%.1/A(.*)../";
}

set_material_name {
    # Example Command: F1 1,Berylium
    # Pad with spaces, left justified, so that the width is fixed. The device strips the whitespace.
    LEN = 0x3B; CMD = "F\$1 1,%-20s"; CRC1 = 0x0; CRC2 = 0x0;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A", "\?\?"
}

get_material_density {
    LEN = 0x27; CMD = "F\$1? 2"; CRC1 = 0x0; CRC2 = 0x0;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A", "%d", "\?\?"
}

set_material_density {
    # Example Command: F1 2,9999
    # 9999 -> 99.99, 1001 -> 10.01
    # Pad with zeroes so we can hard-code the width
    LEN = 0x2B; CMD = "F\$1 2,%04d"; CRC1 = 0x0; CRC2 = 0x0;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A", "\?\?"
}

get_material_zfactor {
    LEN = 0x27; CMD = "F\$1? 3"; CRC1 = 0x0; CRC2 = 0x0;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A", "%d", "\?\?"
}

set_material_zfactor {
    # Example Command: F1 3,9999
    # 9999 -> 9.999, 1001 -> 1.001
    # Pad with zeroes so we can hard-code the width
    LEN = 0x2B; CMD = "F\$1 3,%04d"; CRC1 = 0x0; CRC2 = 0x0;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A", "\?\?"
}

# Sensor Commands

get_crystal_tooling {
    # Parameter: Sensor number
    LEN = 0x28; CMD = "HA1? \$1"; CRC1 = 0x0; CRC2 = 0x0;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A\$1,", "%d", " ", "\?\?"
}

set_crystal_tooling {
    # Parameters: Sensor Number
    # Example: HA1 1,010
    # Left pad with zeroes so we can hard-code the width
    LEN = 0x2B; CMD = "HA1 \$1,%03d"; CRC1 = 0x0; CRC2 = 0x0;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A", "\?\?"
}

get_rate {
    # Parameter: Sensor number
    LEN = 0x24; CMD = "L\$1"; CRC1 = 0x0; CRC2 = 0x0;
    # Full request (Sensor 1): !$L1f2
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    # Full response: !)A 0.00Wd
    in $SYNC, "\?A", "%f", "\?\?";
}

get_thickness {
    # Parameter: Sensor number
    LEN = 0x24; CMD = "N\$1"; CRC1 = 0x0; CRC2 = 0x0;
    # Full request (Sensor 1): !$N1]Q
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    # Full response: !*A 0.000Z\
    in $SYNC, "\?A", "%f", "\?\?";
}

get_frequency1 {
    LEN = 0x24; CMD = "P1"; CRC1 = 0x5A; CRC2 = 0x91;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A", "% f", "\?\?";
}

get_shutter {
    LEN = 0x24; CMD = "U?"; CRC1 = 0x5B; CRC2 = 0x54;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    in $SYNC, "\?A", "% f", "\?\?";
}

#get_filmParameters {
#    LEN = 0x25; CMD = "A1?"; CRC1 = 0x2E; CRC2 = 0x95;
#    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
#    #in $SYNC, "\?A", "%#s%", , "%(\$1.VAL)f", "*f", "%(\$2.VAL)f", "%*f", "%*f", "%*d". "%*d", "\?\?";
#    in $SYNC, "\?A", "\?\?";
#}

# Run State Commands

get_run_state {
    # Parameter: PV Prefix
    LEN = 0x24; CMD = "V?"; CRC1 = 0x5A; CRC2 = 0x74;
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    # in $SYNC, "%.1/A(.*)../"
    in $SYNC, "\?A", "%(\$1:State_RBV)d %(\$1:RunTime_RBV)d %(\$1:ProcessNumber_RBV)d %(\$1:ActiveLayer_RBV)d %(\$1:ControlMode_RBV)1d", "\?\?";
}

start_process {
    LEN = 0x24; CMD = "U0"; CRC1 = 0x9B; CRC2 = 0x52;
    # Full request:
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    # Full response:
    in $SYNC, "\?A", "\?\?";
}

reset_process {
    LEN = 0x24; CMD = "U1"; CRC1 = 0x5A; CRC2 = 0x71;
    # Full request:
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    # Full response:
    in $SYNC, "\?A", "\?\?";
}

zero_thickness {
    LEN = 0x25; CMD = "U32"; CRC1 = 0x94; CRC2 = 0x53;
    # Full request:
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    # Full response:
    in $SYNC, "\?A", "\?\?";
}

zero_time {
    LEN = 0x25; CMD = "U33"; CRC1 = 0x55; CRC2 = 0x70;
    # Full request:
    out $SYNC, $LEN, $CMD, $CRC1, $CRC2;
    # Full response:
    in $SYNC, "\?A", "\?\?";
}
